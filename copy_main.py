import os
from POC.read_file import final_result


def my_decorator(func):
    def wrapper(*args, **kwargs):
        if not args[1]:
            with open('playbook.html', 'a') as f:
                strTable = "<html><style> body { " \
                           "font-family: Open Sans, sans-serif; " \
                           "font-size: 13px;}" \
                           "td, th {  border: 1px solid #8E8D8A; " \
                           " text-align: left;  padding: 8px;}</style> " \
                           "<body bgcolor='#EAE7DC'>" \
                           "<img src='logo.svg' style='float: right; width:150px;height:80px';>" \
                           "<h4> Generated By <br> System Team MIC <br> Bangalore, India</h4>" \
                           "<table style='table-layout: fixed; width: 100%;'" \
                           " fixed;><caption><h1>Test Report</h1></caption>" \
                           "<tr><th style='width:25%;'>Date</th><th style='width:25%;'>ConfigID</th>" \
                           "<th style='width:25%;'>ConfigName</th>" \
                           "<th style='width:25%;'>ConfigStatus</th></tr></table>"
                f.writelines(strTable)
                func(*args, strTable, fd=f)
        else:
            print("File Already Exists!")
            with open('playbook.html', 'a') as f:
                func(*args, fd=f)

    return wrapper


@my_decorator
def writeToHTML(*args, **kwargs):
    filteredData = args[0]
    if len(args) > 2:
        strtable = args[2]

    f = kwargs['fd']
    for item in filteredData:
        the_table = """<table style="table-layout: fixed; width:100%%">
            <tr>
                <td style="width=25%%">%(value1)s</td>
                <td style="width=25%%">%(value2)s</td>
                <td style="width=25%%">%(value3)s</td>
                <td style="background-color: %(color1)s;width=25%%">%(value4)s</td>
            </tr>
        </table>""" % {'value1': item[3],
                       'value2': item[0],
                       'value3': item[1],
                       'value4': item[2],
                       'color1': get_color(item[2]),
                    }
        print(the_table)
        f.writelines(the_table)


def get_color(value):
    color = None
    if value == 'leased':
        color = "green"
    elif value == "lease":
        color = "yellow"
    else:
        color = "red"
    return color


if __name__ == '__main__':
    FileExists = False
    if os.path.exists('playbook.html'):
        FileExists = True
    writeToHTML(final_result, FileExists, fd='None')
